const db = require('../../config/db');

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
async function showSeizureCalendarRussian(bot, chatId, messageId = null, monthOffset = 0) {
    const today = new Date();
    const currentMonth = today.getMonth() + monthOffset;
    const currentYear = today.getFullYear();

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ
    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    const result = await db.query('SELECT * FROM calendar WHERE user_id = $1 AND EXTRACT(MONTH FROM date) = $2 AND EXTRACT(YEAR FROM date) = $3', [chatId, currentMonth + 1, currentYear]);
    const calendarData = result.rows;

    // –ö–Ω–æ–ø–∫–∞ —Å –º–µ—Å—è—Ü–µ–º –∏ –≥–æ–¥–æ–º
    const monthYearButton = {
        text: `${new Date(currentYear, currentMonth).toLocaleString('ru-RU', { month: 'long' })} ${currentYear}`,
        callback_data: 'month_year'
    };

    const calendarButtons = {
        reply_markup: {
            inline_keyboard: []
        }
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞
    calendarButtons.reply_markup.inline_keyboard.push([monthYearButton]);

    // –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    calendarButtons.reply_markup.inline_keyboard.push([
        { text: '–ü–Ω', callback_data: 'weekday' },
        { text: '–í—Ç', callback_data: 'weekday' },
        { text: '–°—Ä', callback_data: 'weekday' },
        { text: '–ß—Ç', callback_data: 'weekday' },
        { text: '–ü—Ç', callback_data: 'weekday' },
        { text: '–°–±', callback_data: 'weekday' },
        { text: '–í—Å', callback_data: 'weekday' },
    ]);

    let row = [];
    const firstDayOfMonth = new Date(currentYear, currentMonth, 1);
    const dayOfWeek = (firstDayOfMonth.getDay() + 6) % 7;

    // –ü—É—Å—Ç—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–æ –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞
    for (let i = 0; i < dayOfWeek; i++) {
        row.push({ text: ' ', callback_data: 'no_action' });
    }

    for (let day = 1; day <= daysInMonth; day++) {
        const dayRecord = calendarData.find(entry => entry.date.getDate() === day);
        let buttonLabel = `${day}`;

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–∫–∏ –¥–ª—è –∑–∞–ø–∏—Å–µ–π —Ä—è–¥–æ–º —Å —á–∏—Å–ª–æ–º
        if (dayRecord) {
            if (dayRecord.had_seizure && dayRecord.medications) {
                buttonLabel += ' üî¥';
            } else if (dayRecord.had_seizure && !dayRecord.medications) {
                buttonLabel += ' üü°';
            } else if (dayRecord.note) {
                buttonLabel += ' ‚úÖ';
            }
        }

        row.push({ text: buttonLabel, callback_data: `calendar_${day}` });

        if (row.length === 7) {
            calendarButtons.reply_markup.inline_keyboard.push(row);
            row = [];
        }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
    while (row.length < 7) {
        row.push({ text: ' ', callback_data: 'no_action' });
    }
    if (row.length) {
        calendarButtons.reply_markup.inline_keyboard.push(row);
    }

    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    calendarButtons.reply_markup.inline_keyboard.push([
        { text: '‚¨ÖÔ∏è', callback_data: `change_month_${monthOffset - 1}` },
        { text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å', callback_data: 'back_to_profile' },
        { text: '‚û°Ô∏è', callback_data: `change_month_${monthOffset + 1}` },
    ]);

    try {
        if (messageId) {
            // –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.editMessageReplyMarkup(calendarButtons.reply_markup, { chat_id: chatId, message_id: messageId });
        } else {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ messageId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            const sentMessage = await bot.sendMessage(chatId, '–í–∞—à –¥–Ω–µ–≤–Ω–∏–∫', calendarButtons);
            return sentMessage.message_id;  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º message_id –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        const sentMessage = await bot.sendMessage(chatId, '–í–∞—à –¥–Ω–µ–≤–Ω–∏–∫', calendarButtons);
        return sentMessage.message_id;  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–π message_id, –µ—Å–ª–∏ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –¥–µ–Ω—å
async function handleCalendarDayRussian(bot, chatId, day, monthOffset) {
    const today = new Date();
    const currentMonth = today.getMonth() + monthOffset;
    const currentYear = today.getFullYear();

    await bot.sendMessage(chatId, `–î–æ–±–∞–≤–∏—Ç—å –Ω–∞ ${day} ${new Date(currentYear, currentMonth).toLocaleString('ru-RU', { month: 'long' })} ${currentYear}? –£ –≤–∞—Å –±—ã–ª –ø—Ä–∏—Å—Ç—É–ø —ç–ø–∏–ª–µ–ø—Å–∏–∏?`, {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–î–∞', callback_data: `seizure_yes_${day}_${monthOffset}` }, { text: '–ù–µ—Ç', callback_data: `seizure_no_${day}_${monthOffset}` }],
            ],
        },
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã –º–µ—Å—è—Ü–∞
async function changeCalendarMonth(bot, chatId, messageId, monthOffset) {
    await showSeizureCalendarRussian(bot, chatId, messageId, monthOffset);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ö
async function handleSeizureEntry(bot, chatId, day, monthOffset, hadSeizure) {
    const today = new Date();
    const currentMonth = today.getMonth() + monthOffset;
    const currentYear = today.getFullYear();
    const entryDate = new Date(currentYear, currentMonth, day);

    if (hadSeizure === 'yes') {
        await bot.sendMessage(chatId, '–í—ã –ø—Ä–∏–Ω–∏–º–∞–ª–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å?', {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–î–∞', callback_data: `medications_yes_${day}_${monthOffset}` }, { text: '–ù–µ—Ç', callback_data: `medications_no_${day}_${monthOffset}` }]
                ]
            }
        });
    } else {
        await saveCalendarEntry(chatId, entryDate, false, false);
        await bot.sendMessage(chatId, '–ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.');
        await showSeizureCalendarRussian(bot, chatId, null, monthOffset);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
async function saveCalendarEntry(chatId, date, hadSeizure, medications) {
    await db.query('INSERT INTO calendar (user_id, date, had_seizure, medications) VALUES ($1, $2, $3, $4)', [chatId, date, hadSeizure, medications]);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –æ –ø—Ä–∏–µ–º–µ –ª–µ–∫–∞—Ä—Å—Ç–≤
async function handleMedicationsEntry(bot, chatId, day, monthOffset, medications) {
    const today = new Date();
    const currentMonth = today.getMonth() + monthOffset;
    const currentYear = today.getFullYear();
    const entryDate = new Date(currentYear, currentMonth, day);

    await saveCalendarEntry(chatId, entryDate, true, medications === 'yes');
    await bot.sendMessage(chatId, '–ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.');
    await showSeizureCalendarRussian(bot, chatId, null, monthOffset);
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
module.exports = {
    showSeizureCalendarRussian,
    handleCalendarDayRussian,
    changeCalendarMonth,
    handleSeizureEntry,
    handleMedicationsEntry
};
