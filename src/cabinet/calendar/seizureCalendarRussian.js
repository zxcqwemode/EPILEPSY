const db = require('../../config/db');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
async function seizureCalendarRussian(bot, chatId, messageId, monthOffset = 0) {
    try {
        const today = new Date();
        const currentMonth = today.getMonth() + monthOffset;
        const currentYear = today.getFullYear();

        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ
        const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();

        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const result = await db.query(`
            SELECT * FROM calendar WHERE user_id = $1 AND EXTRACT(MONTH FROM date) = $2 AND EXTRACT(YEAR FROM date) = $3
        `, [chatId, currentMonth + 1, currentYear]);

        const calendarData = result.rows;

        // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –¥–Ω–µ–π –º–µ—Å—è—Ü–∞
        const inlineKeyboard = [];
        let row = [];
        const firstDayOfMonth = new Date(currentYear, currentMonth, 1);
        const dayOfWeek = (firstDayOfMonth.getDay() + 6) % 7;

        // –ö–Ω–æ–ø–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –º–µ—Å—è—Ü–∞
        inlineKeyboard.push([
            {
                text: `${new Date(currentYear, currentMonth).toLocaleString('ru-RU', { month: 'long', year: 'numeric' })}`,
                callback_data: 'no_action'
            }
        ]);

        // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
        const weekDays = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'];
        inlineKeyboard.push(weekDays.map(day => ({ text: day, callback_data: 'no_action' })));

        // –ü—É—Å—Ç—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–æ –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞
        for (let i = 0; i < dayOfWeek; i++) {
            row.push({ text: ' ', callback_data: 'no_action' });
        }

        for (let day = 1; day <= daysInMonth; day++) {
            const dayRecord = calendarData.find(entry => new Date(entry.date).getDate() === day);
            let buttonLabel = `${day}`;

            // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–ø–∏—Å–µ–π
            if (dayRecord) {
                if (dayRecord.had_seizure && dayRecord.medications) {
                    buttonLabel += ' üî∫';  // –ü—Ä–∏—Å—Ç—É–ø —Å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∞–º–∏
                } else if (dayRecord.had_seizure && !dayRecord.medications) {
                    buttonLabel += ' üî∏';  // –ü—Ä–∏—Å—Ç—É–ø –±–µ–∑ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–≤
                } else if (dayRecord.note) {
                    buttonLabel += ' ‚úÖ';  // –ó–∞–º–µ—Ç–∫–∞
                }
            }

            row.push({ text: buttonLabel, callback_data: `calendar_${day}_${monthOffset}` });

            if (row.length === 7) {
                inlineKeyboard.push(row);
                row = [];
            }
        }

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏ –ø—É—Å—Ç—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        while (row.length < 7) {
            row.push({ text: ' ', callback_data: 'no_action' });
        }
        if (row.length) {
            inlineKeyboard.push(row);
        }

        // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ—Å—è—Ü–∞–º
        const navigationRow = [];
        navigationRow.push({ text: '‚¨ÖÔ∏è', callback_data: `change_month_${monthOffset - 1}` });

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–µ–º –ª–∏ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø—Ä–∞–≤–æ
        if (currentMonth < today.getMonth()) {
            navigationRow.push({ text: '‚û°Ô∏è', callback_data: `change_month_${monthOffset + 1}` });
        } else {
            navigationRow.push({ text: '‚û°Ô∏è', callback_data: 'no_action' }); // –ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        }

        inlineKeyboard.push(navigationRow);

        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å"
        inlineKeyboard.push([
            { text: '–ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å', callback_data: 'back_to_profile' }
        ]);

        // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
        await bot.editMessageText(
            `–í–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–∏—Å—Ç—É–ø–æ–≤\n\n–ï—Å–ª–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ —É–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å, —Ç–æ –∑–Ω–∞—á–æ–∫ –ø–æ–∫–∞–∂–µ—Ç, –±—ã–ª –ª–∏ —É –≤–∞—Å –ø—Ä–∏—Å—Ç—É–ø:\nüî∏ ‚Äî –ü—Ä–∏—Å—Ç—É–ø –±–µ–∑ –ø—Ä–∏–µ–º–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤\nüî∫ ‚Äî –ü—Ä–∏—Å—Ç—É–ø —Å –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞–º–∏`,
            {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: inlineKeyboard
                }
            }
        );
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ—Å—è—Ü–∞
async function handleChangeMonthRussian(bot, chatId, monthOffset, messageId) {
    await seizureCalendarRussian(bot, chatId, messageId, monthOffset);
}

module.exports = {
    seizureCalendarRussian,
    handleChangeMonthRussian
};
